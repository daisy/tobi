<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="clr-namespace:ControlsLibrary"
	x:Class="VSMTest.VSMTestWindow"
	Title="VisualStateManager Test App"
	>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="Auto"/>
    </Grid.ColumnDefinitions>

    <StackPanel Grid.Column="0" Margin="10">
      <TextBlock>
        <Bold>
          <Underline>Control states</Underline>
          <LineBreak/>
        </Bold>
      </TextBlock>

      <Button Width="120" HorizontalAlignment="Left" Click="SunnyButton_Click" Content="Sunny" Margin="2"/>
      <Button Width="120" HorizontalAlignment="Left" Click="PartyCloudyButton_Click" Content="Partly Cloudy" Margin="2"/>
      <Button Width="120" HorizontalAlignment="Left" Click="CloudyButton_Click" Content="Cloudy" Margin="2"/>
      <Button Width="120" HorizontalAlignment="Left" Click="RainyButton_Click" Content="Rainy" Margin="2"/>
      <Button Width="120" HorizontalAlignment="Left" Click="Button_Click" Content="DoLeak" Margin="2"/>


            <CheckBox Content="IsIndeterminate" x:Name="isindeterminate"/>
      <RadioButton GroupName="TestRadio" Content="{Binding Path=IsChecked,RelativeSource={RelativeSource Self}}" />
      <RadioButton GroupName="TestRadio" Content="{Binding Path=IsChecked,RelativeSource={RelativeSource Self}}" />
      
      <ListBox>
        <ListBoxItem>Test 1</ListBoxItem>
        <ListBoxItem>Test 2</ListBoxItem>
        <ListBoxItem>Test 3</ListBoxItem>
      </ListBox>
      
      <TextBox />
      
      <ProgressBar Height="15" Width="150" Value="50" Minimum="0" Maximum="100" IsIndeterminate="{Binding Path=IsChecked,ElementName=isindeterminate}"/>

      <TextBlock>
        <Bold>
          <LineBreak/>
          <Underline>Visual states</Underline>
          <LineBreak/>
        </Bold>
      </TextBlock>
      
      <TextBlock Width="240" TextWrapping="Wrap" Margin="2">
        <Bold>Common:</Bold><LineBreak/>
        Normal,<LineBreak/>
        MouseOver,<LineBreak/>
        Pressed<LineBreak/>
        <LineBreak/>
        <Bold>Weather:</Bold><LineBreak/>
        Sunny,<LineBreak/>
        PartlyCloudy,<LineBreak/>
        Cloudy,<LineBreak/>
        Rainy<LineBreak/>
        <LineBreak/>
        <Bold>Transitions:</Bold><LineBreak/>
        Sunny to PartlyCloudy,<LineBreak/>
        Sunny to Cloudy,<LineBreak/>
        PartlyCloudy to Cloudy
      </TextBlock>
            <TabControl>
                <TabItem Header="Cheese">
                    <StackPanel x:Name="leakpanel"></StackPanel>
                </TabItem>
                <TabItem Header="Crackers">
                    <StackPanel Orientation="Vertical">
                    <Button Width="120" HorizontalAlignment="Left" Content="Sunny" Margin="2"/>
                    <Button Width="120" HorizontalAlignment="Left" Content="Partly Cloudy" Margin="2"/>
                    <Button Width="120" HorizontalAlignment="Left" Content="Cloudy" Margin="2"/>
                    <Button Width="120" HorizontalAlignment="Left" Content="Rainy" Margin="2"/>
                    <Button Width="120" HorizontalAlignment="Left" Content="DoLeak" Margin="2"/>
                        </StackPanel>
                </TabItem>
            </TabControl>
</StackPanel>

    <controls:WeatherControl
            x:Name="WeatherGadget"
            Grid.Column="1"
            Width="400" Height="400" Margin="30" FontSize="20"
            Condition="Sunny"
            Temperature="80"
            ConditionDescription="Sunny with blue skies"/>


  </Grid>

</Window>