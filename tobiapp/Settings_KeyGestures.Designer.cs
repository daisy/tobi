//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Tobi.Common.UI;

namespace Tobi {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0")]
    internal sealed partial class Settings_KeyGestures : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings_KeyGestures defaultInstance = ((Settings_KeyGestures)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings_KeyGestures())));
        
        public static Settings_KeyGestures Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ CTRL ] Q")]
        public KeyGestureString KeyGesture_MenuExit {
            get {
                return ((KeyGestureString)(this["KeyGesture_MenuExit"]));
            }
            set {
                this["KeyGesture_MenuExit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ CTRL ] O")]
        public KeyGestureString KeyGesture_MenuOpen {
            get {
                return ((KeyGestureString)(this["KeyGesture_MenuOpen"]));
            }
            set {
                this["KeyGesture_MenuOpen"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ CTRL ] C")]
        public KeyGestureString KeyGesture_MenuCopy {
            get {
                return ((KeyGestureString)(this["KeyGesture_MenuCopy"]));
            }
            set {
                this["KeyGesture_MenuCopy"] = value;
            }
        }
    }
}
