//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tobi {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    public sealed partial class Settings_KeyGestures : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings_KeyGestures defaultInstance = ((Settings_KeyGestures)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings_KeyGestures())));
        
        public static Settings_KeyGestures Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ CTRL ] F")]
        public global::Tobi.Common.UI.KeyGestureString Keyboard_Find {
            get {
                return ((global::Tobi.Common.UI.KeyGestureString)(this["Keyboard_Find"]));
            }
            set {
                this["Keyboard_Find"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ NONE ] F3")]
        public global::Tobi.Common.UI.KeyGestureString Keyboard_FindNext {
            get {
                return ((global::Tobi.Common.UI.KeyGestureString)(this["Keyboard_FindNext"]));
            }
            set {
                this["Keyboard_FindNext"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ SHIFT ] F3")]
        public global::Tobi.Common.UI.KeyGestureString Keyboard_FindPrevious {
            get {
                return ((global::Tobi.Common.UI.KeyGestureString)(this["Keyboard_FindPrevious"]));
            }
            set {
                this["Keyboard_FindPrevious"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ ALT ] F4")]
        public global::Tobi.Common.UI.KeyGestureString Keyboard_AppExit {
            get {
                return ((global::Tobi.Common.UI.KeyGestureString)(this["Keyboard_AppExit"]));
            }
            set {
                this["Keyboard_AppExit"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ NONE ] F1")]
        public global::Tobi.Common.UI.KeyGestureString Keyboard_Help {
            get {
                return ((global::Tobi.Common.UI.KeyGestureString)(this["Keyboard_Help"]));
            }
            set {
                this["Keyboard_Help"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ CTRL ] OemPlus (=)")]
        public global::Tobi.Common.UI.KeyGestureString Keyboard_UI_Zoom_Increase {
            get {
                return ((global::Tobi.Common.UI.KeyGestureString)(this["Keyboard_UI_Zoom_Increase"]));
            }
            set {
                this["Keyboard_UI_Zoom_Increase"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ CTRL ] OemMinus (-)")]
        public global::Tobi.Common.UI.KeyGestureString Keyboard_UI_Zoom_Decrease {
            get {
                return ((global::Tobi.Common.UI.KeyGestureString)(this["Keyboard_UI_Zoom_Decrease"]));
            }
            set {
                this["Keyboard_UI_Zoom_Decrease"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("[ SHIFT CTRL ] OemMinus (-)")]
        public global::Tobi.Common.UI.KeyGestureString Keyboard_UI_Zoom_Reset {
            get {
                return ((global::Tobi.Common.UI.KeyGestureString)(this["Keyboard_UI_Zoom_Reset"]));
            }
            set {
                this["Keyboard_UI_Zoom_Reset"] = value;
            }
        }
    }
}
