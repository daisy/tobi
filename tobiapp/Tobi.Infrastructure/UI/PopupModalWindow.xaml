<Window x:Class="Tobi.Infrastructure.UI.PopupModalWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Infrastructure="clr-namespace:Tobi.Infrastructure"
    xmlns:infraUI="clr-namespace:Tobi.Infrastructure.UI"
    Height="480" Width="640"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner"
        ResizeMode="CanResizeWithGrip"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        Loaded="OnWindowLoaded"
        Closing="OnWindowClosing"
        
        >
  <!-- 
        DataContext="{Binding RelativeSource={RelativeSource Self}}" -->
  
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
  </Window.Resources>
  
    <DockPanel LastChildFill="True">

      <DockPanel.LayoutTransform>
        <!-- WARNING: DataModel must be Shell (see constructor) -->
        <ScaleTransform
              ScaleX="{Binding MagnificationLevel, Mode=OneWay}"
                        ScaleY="{Binding RelativeSource={RelativeSource Self}, Path=ScaleX, Mode=OneWay}"/>
      </DockPanel.LayoutTransform>


      <DockPanel
        DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                  AncestorType={x:Type Window}}, Path=.}"
        LastChildFill="True" DockPanel.Dock="Bottom"
                 Margin="8, 0, 8, 8"
        >

        <Rectangle DockPanel.Dock="Top"
                   Margin="0, 0, 0, 8"
                   Height="1"
                   HorizontalAlignment="Stretch"
                   StrokeThickness="1"
                   Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                    Fill="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                SnapsToDevicePixels="True"
                   />

        <!-- 
          IsChecked="{Binding IsDetailsExpanded, Mode=OneWay}" -->
        <infraUI:TwoStateButtonRichCommand
          Style="{StaticResource ToolBarButtonBaseStyle}"
          
          ShowTextLabel="true"
          
        InputBindingManager="{Binding InputBindingManager}"
          
          RichCommandOne="{Binding CommandDetailsCollapse}"
          RichCommandTwo="{Binding CommandDetailsExpand}"
                RichCommandActive="{Binding IsDetailsExpanded, Mode=OneWay}"
          DockPanel.Dock="Left"
          Visibility="{Binding Mode=OneWay, Path=HasDetails, Converter={StaticResource booleanToVisibilityConverter}}"/>
        
        <StackPanel
                  Orientation="Horizontal"
                  HorizontalAlignment="Right">


          <StackPanel.Resources>

            <Style TargetType="{x:Type Button}">
              <Setter Property="Padding" Value="5"></Setter>
              <Setter Property="Margin" Value="0, 0, 4, 0"></Setter>
              <Setter Property="MinWidth" Value="50"></Setter>
            </Style>
            
          </StackPanel.Resources>

          <Button x:Name="ButtonOK"
                Click="OnOkButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Ok}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Ok}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Ok, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Infrastructure:UserInterfaceStrings.Ok}"/>
        
        <Button x:Name="ButtonCancel"
                Click="OnCancelButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Cancel}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Cancel}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Cancel, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Infrastructure:UserInterfaceStrings.Cancel}"/>
        
        <Button x:Name="ButtonYes"
                Click="OnYesButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Yes}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Yes}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Yes, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Infrastructure:UserInterfaceStrings.Yes}"/>
        
        <Button x:Name="ButtonNo"
                Click="OnNoButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_No}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_No}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_No, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Infrastructure:UserInterfaceStrings.No}"/>
        
        <Button x:Name="ButtonApply"
                Click="OnApplyButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Apply}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Apply}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Apply, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Infrastructure:UserInterfaceStrings.Apply}"/>
        
        <Button x:Name="ButtonClose"
                Click="OnCloseButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Close}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Close}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Close, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Infrastructure:UserInterfaceStrings.CloseDialog}"/>

        <Rectangle Width="10"/>
      
      </StackPanel>
    </DockPanel>
      <DockPanel 
        LastChildFill="True"
        DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                  AncestorType={x:Type Window}}, Path=.}">
        <!-- Grid.ColumnDefinitions>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height=".5*"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions -->

        <ContentControl x:Name="ContentPlaceHolder"
                      Margin="8, 8, 8, 0"
                         DockPanel.Dock="Top"
                      Grid.Row="0"
                      Grid.Column="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                      Focusable="False"/>

        <ContentControl x:Name="DetailsPlaceHolder"
                    Margin="8, 8, 8, 0"
                      Grid.Row="1"
                      Grid.Column="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                      Focusable="False"
                      Visibility="{Binding IsDetailsExpanded, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}"/>
      </DockPanel>
    </DockPanel>
</Window>
