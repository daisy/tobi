<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContextToOpenSaveDataModelOfSDKProject" xml:space="preserve">
    <value>A context for opening and saving the data model of a Urakawa SDK project.</value>
  </data>
  <data name="OpenSaveAsQuestion" xml:space="preserve">
    <value>Do you want to open the saved document ?</value>
  </data>
  <data name="OpenSaveAsQuestion_" xml:space="preserve">
    <value>Open saved document ?</value>
  </data>
  <data name="OpenDocumentFolder" xml:space="preserve">
    <value>Current document</value>
  </data>
  <data name="OpenDocumentFolder_" xml:space="preserve">
    <value>Open a file browser where the currently-loaded document is located.</value>
  </data>
  <data name="CannotOpenLocalFile" xml:space="preserve">
    <value>Cannot open file.</value>
  </data>
  <data name="CannotOpenLocalFile_" xml:space="preserve">
    <value>Failed to open file!</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>_Close</value>
  </data>
  <data name="Close_" xml:space="preserve">
    <value>Close document</value>
  </data>
  <data name="DataCleanup" xml:space="preserve">
    <value>_Cleanup unused data</value>
  </data>
  <data name="DataCleanup_" xml:space="preserve">
    <value>Remove files unused by the document</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export...</value>
  </data>
  <data name="Export_" xml:space="preserve">
    <value>Export the current document  to DAISY...</value>
  </data>
  <data name="Menu_ClearRecentFiles" xml:space="preserve">
    <value>_Clear</value>
  </data>
  <data name="Menu_ClearRecentFiles_" xml:space="preserve">
    <value>Clear the list of recently-opened files.</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>_Open / import</value>
  </data>
  <data name="OpenXukFile" xml:space="preserve">
    <value>Opening XUK file...</value>
  </data>
  <data name="Open_" xml:space="preserve">
    <value>Open or import a document</value>
  </data>
  <data name="Overwrite" xml:space="preserve">
    <value>_Overwrite</value>
  </data>
  <data name="OverwriteConfirm_File" xml:space="preserve">
    <value>You are about to overwrite a file.
Do you want to continue ?</value>
  </data>
  <data name="OverwriteConfirm_Folder" xml:space="preserve">
    <value>You are about to overwrite a folder.
Do you want to continue ?</value>
  </data>
  <data name="ParsingXMLDoc_BuildingDOM" xml:space="preserve">
    <value>Parsing the XML content of the XUK file...</value>
  </data>
  <data name="Redo" xml:space="preserve">
    <value>_Redo</value>
  </data>
  <data name="Redo_" xml:space="preserve">
    <value>Redo last undone action</value>
  </data>
  <data name="RunningTask" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>_Save</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>S_ave as...</value>
  </data>
  <data name="SaveAs_" xml:space="preserve">
    <value>Save the current document as...</value>
  </data>
  <data name="Save_" xml:space="preserve">
    <value>Save the current document</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>_Undo</value>
  </data>
  <data name="Undo_" xml:space="preserve">
    <value>Undo last action</value>
  </data>
  <data name="UnsavedChanges" xml:space="preserve">
    <value>_Save before close</value>
  </data>
  <data name="UnsavedChangesConfirm" xml:space="preserve">
    <value>There are unsaved changes.
Agree to save the document now ?</value>
  </data>
  <data name="UnsavedChangesDetails" xml:space="preserve">
    <value>If you close the document without saving,
any changes will be lost !</value>
  </data>
  <data name="UrakawaSDKSessionManager" xml:space="preserve">
    <value>Urakawa SDK session manager.</value>
  </data>
  <data name="Importing" xml:space="preserve">
    <value>Importing...</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Saved.</value>
  </data>
  <data name="SaveXukFile" xml:space="preserve">
    <value>Saving XUK file...</value>
  </data>
  <data name="SerializeDOMIntoXukFile" xml:space="preserve">
    <value>Saving the document as XML into the XUK file...</value>
  </data>
</root>