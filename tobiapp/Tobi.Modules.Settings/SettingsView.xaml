<DockPanel LastChildFill="True"
           x:Class="Tobi.Plugin.Settings.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:UI="clr-namespace:Tobi.Common.UI;assembly=Tobi.Common" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Settings="clr-namespace:Tobi.Plugin.Settings" xmlns:_UnusedCode="clr-namespace:Tobi.Common._UnusedCode;assembly=Tobi.Common" DataContext="{Binding RelativeSource={RelativeSource Self}}">

  <DockPanel LastChildFill="True"  DockPanel.Dock="Top" Margin="0,0,0,4">
    <TextBlock Text="Find:"  DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,4,0"/>
    <_UnusedCode:WatermarkTextBox Watermark="search keywords"
                                  HorizontalAlignment="Stretch"/>
  </DockPanel>

  <UI:SortableListView
    
           ScrollViewer.CanContentScroll="True"
             VirtualizingStackPanel.IsVirtualizing="False"
             VirtualizingStackPanel.VirtualizationMode="Recycling"
             ScrollViewer.IsDeferredScrollingEnabled="False"
    
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"

    ItemsSource="{Binding AggregatedSettings, Mode=OneWay}"
           
              SelectionMode="Single"

            ScrollViewer.HorizontalScrollBarVisibility="Visible"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
AlternationCount="2"
            >

    <ListView.Resources>
      <ToolTip x:Key="settingTooltip"
         DataContext="{Binding Path=PlacementTarget,
           RelativeSource={x:Static RelativeSource.Self}}"
               >
        <TextBlock Text="{Binding Path=DataContext.FullDescription, Mode=OneWay}"/>

      </ToolTip>

      <DataTemplate x:Key="SettingEditTemplate_Double" DataType="{x:Type System:Double}">
        <TextBox>
          <TextBox.Text>
            <Binding Path="Value" Converter="{Settings:TextToDoubleConverter}" Mode="TwoWay"
                     UpdateSourceTrigger="PropertyChanged"
                     ValidatesOnDataErrors="True" ValidatesOnExceptions="True">
              <Binding.ValidationRules>
                <Settings:DoubleValidationRule/>
              </Binding.ValidationRules>
            </Binding>
          </TextBox.Text>

          <TextBox.Style>
            <Style TargetType="{x:Type TextBox}">
              <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">

                  <!-- Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" -->
                  <!-- Value="{Binding RelativeSource={RelativeSource Self}, 
                          Path=(Validation.Errors).CurrentItem, 
                          Converter={Settings:ValidationErrorConverter}}" -->
                  <Setter Property="ToolTip"
                          Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}"
                          />

                </Trigger>
              </Style.Triggers>
            </Style>
          </TextBox.Style>
        </TextBox>
      </DataTemplate>

      <DataTemplate x:Key="SettingEditTemplate_Boolean" DataType="{x:Type System:Boolean}">
        <CheckBox IsChecked="{Binding Value, Mode=TwoWay}"/>
      </DataTemplate>

      <DataTemplate x:Key="SettingEditTemplate_Text" DataType="{x:Type System:String}">
        <TextBlock Text="{Binding Value, Mode=OneWay}"/>
      </DataTemplate>

      <Settings:SettingsValueTemplateSelector x:Key="SettingsValueTemplateSelector"/>
    </ListView.Resources>

    <ListView.View>
      <GridView AllowsColumnReorder="true">

        <!-- GridViewColumn Header="Icon">
          <GridViewColumn.CellTemplate>
            <DataTemplate>

              <ContentControl Focusable="False"
                                Width="{Binding Path=IconProvider.IconWidth_Large}"
                            
                                  Height="{Binding Path=IconProvider.IconHeight_Large}"
                            
                                  Content="{Binding Path=IconProvider.IconLarge}"
                                                     
                      ToolTip="{StaticResource imageIconTooltipp}"
                              Margin="2, 4, 2, 4">
              </ContentControl>
            </DataTemplate>

          </GridViewColumn.CellTemplate>

        </GridViewColumn -->


        <GridViewColumn Header="Name"
                        UI:SortableListView.SortPropertyName="Name">
          <GridViewColumn.CellTemplate>
            <DataTemplate>
              <TextBlock Text="{Binding Name, Mode=OneWay}"
                         ToolTip="{StaticResource settingTooltip}"
                         FontWeight="Bold">
                <TextBlock.Style>
                  <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="FrameworkElement.Margin" Value="2,2,2,2"/>
                  </Style>
                </TextBlock.Style>
              </TextBlock>
            </DataTemplate>
          </GridViewColumn.CellTemplate>
        </GridViewColumn>

        <GridViewColumn Header="Value" CellTemplateSelector="{StaticResource SettingsValueTemplateSelector}"/>

        <GridViewColumn Header="Default"
                        DisplayMemberBinding="{Binding DefaultValue, Mode=OneWay}"/>

      </GridView>
    </ListView.View>

    <ListView.ItemContainerStyle>

      <Style TargetType="{x:Type ListViewItem}">

        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

        <Setter Property="AutomationProperties.Name" Value="{Binding Path=FullDescription, Mode=OneWay}"/>

        <Style.Triggers>
          <Trigger Property="ItemsControl.AlternationIndex" Value="0">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
          </Trigger>
        </Style.Triggers>
      </Style>

    </ListView.ItemContainerStyle>
  </UI:SortableListView>






  <!-- ListBox
  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
  ItemsSource="{Binding Path=., Mode=OneWay}"
  -->
  <!--DisplayMemberPath="Message"   Source=., Path=SettingsExpanded, Mode=OneWay  -->
  <!-- ListBox.ItemTemplate>
      <DataTemplate>
        <TextBlock Text="{Binding Path=., Mode=OneWay}"/>
      </DataTemplate>
    </ListBox.ItemTemplate -->
  <!-- ListBox.ItemContainerStyle>
      <Style TargetType="{x:Type ListBoxItem}">

        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FontWeight" Value="Normal" />

        <Style.Triggers>
          <DataTrigger Binding="{Binding Severity, Converter={StaticResource SeverityConverter}}" Value="True">
            <Setter Property="FontWeight" Value="Bold" />
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </ListBox.ItemContainerStyle  -->
  <!-- /ListBox -->
</DockPanel>
