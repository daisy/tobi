<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AudioPlay" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="AudioClear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="AudioAddEdit" xml:space="preserve">
    <value>Add/edit...</value>
  </data>
  <data name="CmdEditDescriptions_LongDesc" xml:space="preserve">
    <value>Modify the description(s) of the selected document item</value>
  </data>
  <data name="CmdEditDescriptions_ShortDesc" xml:space="preserve">
    <value>Edit image _description</value>
  </data>
  <data name="DescriptionsPlugin_Description" xml:space="preserve">
    <value>A user-interface to edit image descriptions.</value>
  </data>
  <data name="DescriptionsPlugin_Name" xml:space="preserve">
    <value>Descriptions editor.</value>
  </data>
  <data name="NoAudioIcon" xml:space="preserve">
    <value>No audio (click to edit)</value>
  </data>
  <data name="AudioIcon" xml:space="preserve">
    <value>Audio (click to edit)</value>
  </data>
  <data name="LongDescriptionHelp" xml:space="preserve">
    <value>The long description provides the primary description of the associated image, graphic or visually-oriented structure. It should therefore contain a comprehensive explanation of the referenced item. See the summary description for information on how to include a compact description.</value>
  </data>
  <data name="SummaryDescriptionHelp" xml:space="preserve">
    <value>The summary description provides a shorter, more succinct version of the primary long description.</value>
  </data>
  <data name="SimplifiedDescriptionHelp" xml:space="preserve">
    <value>The simplified language description provides a simplified version of the primary long description.</value>
  </data>
  <data name="TactileImageHelp" xml:space="preserve">
    <value>The tactile image provides an alternative image to the source image, optionally associated with an explanatory tour. Using the advanced editor, it is possible to specify one or more identical tactile images for different production methods, differentiated by their role attribute (e.g., one for swell paper production and another for stereolithograph printing).</value>
  </data>
  <data name="SimplifiedImageHelp" xml:space="preserve">
    <value>The simplified image provides a simplified version of the source image, optionally associated with an explanatory tour. Using the advanced editor, it is possible to specify one or more identical simplified images, in different formats.</value>
  </data>
  <data name="TourHelp" xml:space="preserve">
    <value>The tour description associated with a tactile graphic or a simplified alternative image provides orientation, and explains how to conceptually explore the images.</value>
  </data>
  <data name="EditAdvanced" xml:space="preserve">
    <value>Edit in advanced mode...</value>
  </data>
  <data name="FilterEmptyAlt" xml:space="preserve">
    <value>Show empty alt</value>
  </data>
  <data name="AddEdit" xml:space="preserve">
    <value>Add / edit ...</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AlternativeImages" xml:space="preserve">
    <value>Alternative images</value>
  </data>
  <data name="AttributeAlreadyExists" xml:space="preserve">
    <value>This attribute already exists.</value>
  </data>
  <data name="Attributes" xml:space="preserve">
    <value>Attributes</value>
  </data>
  <data name="Audio" xml:space="preserve">
    <value>Audio</value>
  </data>
  <data name="AutomaticallyID" xml:space="preserve">
    <value>Automatically rename linked identifiers?\n(recommended)</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Descriptions" xml:space="preserve">
    <value>Descriptions</value>
  </data>
  <data name="DIAGRAMElementName" xml:space="preserve">
    <value>DIAGRAM element name</value>
  </data>
  <data name="DuplicateAttribute" xml:space="preserve">
    <value>Duplicate attribute!</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditAttribute" xml:space="preserve">
    <value>Edit attribute</value>
  </data>
  <data name="EditDescriptionText" xml:space="preserve">
    <value>Edit description text</value>
  </data>
  <data name="EnterTextPlaceholder" xml:space="preserve">
    <value>[enter text here]</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="FirstSelectImage" xml:space="preserve">
    <value>You must first select an image to describe.</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="LongDescription" xml:space="preserve">
    <value>Long description</value>
  </data>
  <data name="Metadata" xml:space="preserve">
    <value>Metadata</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoIssues" xml:space="preserve">
    <value>No issues detected.</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open...</value>
  </data>
  <data name="OpenDiagramXml" xml:space="preserve">
    <value>Open DIAGRAM XML file</value>
  </data>
  <data name="OpenImage" xml:space="preserve">
    <value>Open image</value>
  </data>
  <data name="Property" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="RefactorIdentifiers" xml:space="preserve">
    <value>Refactor identifiers?</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="SimplifiedImage" xml:space="preserve">
    <value>Simplified image</value>
  </data>
  <data name="SimplifiedLanguage" xml:space="preserve">
    <value>Simplified language</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="SwitchToAdvancedEditor" xml:space="preserve">
    <value>Switch to advanced editor</value>
  </data>
  <data name="SwitchToBasicEditor" xml:space="preserve">
    <value>Switch to basic editor</value>
  </data>
  <data name="TactileImage" xml:space="preserve">
    <value>Tactile image</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="TextDescriptions" xml:space="preserve">
    <value>Text descriptions</value>
  </data>
  <data name="Tour" xml:space="preserve">
    <value>Tour</value>
  </data>
  <data name="LongDescMissing" xml:space="preserve">
    <value>- No long description is specified.</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="LongDescMoreThanOne" xml:space="preserve">
    <value>- There are more than one long description</value>
  </data>
  <data name="LongDescTextMissing" xml:space="preserve">
    <value>- The long description text is missing.</value>
  </data>
  <data name="LongDescHasOtherData" xml:space="preserve">
    <value>(has other data)</value>
  </data>
  <data name="LongDescNoImage" xml:space="preserve">
    <value>- The long description shouldn't have an image.</value>
  </data>
  <data name="SummaryMoreThanOne" xml:space="preserve">
    <value>- There are more than one summary</value>
  </data>
  <data name="SummaryTextMissing" xml:space="preserve">
    <value>- The summary text is missing.</value>
  </data>
  <data name="SummaryNoImage" xml:space="preserve">
    <value>- The summary shouldn't have an image.</value>
  </data>
  <data name="SimplifiedImageMoreThanOne" xml:space="preserve">
    <value>- There are more than one simplified image</value>
  </data>
  <data name="SimplifiedLanguageTextMissing" xml:space="preserve">
    <value>- The simplified language text is missing.</value>
  </data>
  <data name="SimplifiedLanguageNoImage" xml:space="preserve">
    <value>- The simplified language shouldn't have an image.</value>
  </data>
  <data name="SimplifiedLanguageMoreThanOne" xml:space="preserve">
    <value>- There are more than one simplified language</value>
  </data>
  <data name="SimplifiedImageGroupID" xml:space="preserve">
    <value>which will be grouped if they have the same identifier and share the same tour.</value>
  </data>
  <data name="SimplifiedImageAudioNoTour" xml:space="preserve">
    <value>- The simplified image has audio but no corresponding tour.</value>
  </data>
  <data name="SimplifiedImageMissingImage" xml:space="preserve">
    <value>- Image is missing for simplified image.</value>
  </data>
  <data name="SimplifiedImageTourRecommended" xml:space="preserve">
    <value>- Tour text is recommended for simplified image.</value>
  </data>
  <data name="TactileImageMoreThanOne" xml:space="preserve">
    <value>- There are more than one tactile image</value>
  </data>
  <data name="TactileImageAudioNoTour" xml:space="preserve">
    <value>- The tactile image has audio but no corresponding tour.</value>
  </data>
  <data name="TactileImageMissingImage" xml:space="preserve">
    <value>- Image is missing for tactile image.</value>
  </data>
  <data name="TactileImageTourRecommended" xml:space="preserve">
    <value>- Tour text is recommended for tactile image.</value>
  </data>
  <data name="DiagramUnknownElements" xml:space="preserve">
    <value>- Unknown DIAGRAM elements:</value>
  </data>
  <data name="DiagramElementsInvalidSyntax" xml:space="preserve">
    <value>- Invalid syntax for DIAGRAM elements: </value>
  </data>
  <data name="InvalidIDs" xml:space="preserve">
    <value>- Some identifiers are invalid:</value>
  </data>
  <data name="DuplicatedIDs" xml:space="preserve">
    <value>- Some identifiers are duplicated (this may be valid if used for grouping objects):</value>
  </data>
  <data name="MissingIDs" xml:space="preserve">
    <value>- Some identifiers are referenced, but are missing:</value>
  </data>
  <data name="InvalidLanguageTags" xml:space="preserve">
    <value>- Some language tags are invalid:</value>
  </data>
  <data name="SimplifiedImageMissing" xml:space="preserve">
    <value>- The simplified image is missing.</value>
  </data>
  <data name="LongDescHasOtherDataAdvanced" xml:space="preserve">
    <value>(has other data, see advanced editor)</value>
  </data>
  <data name="TactileImageMissing" xml:space="preserve">
    <value>- The tactile image is missing.</value>
  </data>
  <data name="InvalidDates" xml:space="preserve">
    <value>- Some dates seem invalid:</value>
  </data>
</root>