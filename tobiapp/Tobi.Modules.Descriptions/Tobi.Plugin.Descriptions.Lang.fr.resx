<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CmdEditDescriptions_LongDesc" xml:space="preserve">
    <value>Modifier la/les descriptions de l'élément du document sélectionné</value>
  </data>
  <data name="CmdEditDescriptions_ShortDesc" xml:space="preserve">
    <value>Editer la _description de l'image</value>
  </data>
  <data name="DescriptionsPlugin_Description" xml:space="preserve">
    <value>Interface utilisateur pour éditer la description des images.</value>
  </data>
  <data name="DescriptionsPlugin_Name" xml:space="preserve">
    <value>Editeur de descriptions.</value>
  </data>
  <data name="NoAudioIcon" xml:space="preserve">
    <value>Pas d'audio (cliquez pour éditer)</value>
  </data>
  <data name="AudioIcon" xml:space="preserve">
    <value>Audio (cliquez pour éditer)</value>
  </data>
  <data name="LongDescriptionHelp" xml:space="preserve">
    <value>La description longue fournit la description principale de l'image, du graphique ou de la structure visuelle associée. Elle doit par conséquent contenir une explication très complète de l'élément référencé. Consultez l'aide sur la description sommaire pour des informations sur la manière d'inclure une description compacte.</value>
  </data>
  <data name="SummaryDescriptionHelp" xml:space="preserve">
    <value>La description sommaire fournit une version plus courte et plus succincte que la description longue principale.</value>
  </data>
  <data name="SimplifiedDescriptionHelp" xml:space="preserve">
    <value>La description en langage simplifié fournit une version simplifiée de la description longue principale.</value>
  </data>
  <data name="TactileImageHelp" xml:space="preserve">
    <value>L'image tactile fournit une image alternative à l'image source, et peut être associée en option à une explication. À l'aide de l'éditeur avancé, il est possible de spécifier une ou plusieurs images tactiles identiques pour différentes méthodes de production, distinguées par leur attribut rôle (par exemple, une pour les productions en thermogonflage et une autre pour les imprimés en reliefs).</value>
  </data>
  <data name="SimplifiedImageHelp" xml:space="preserve">
    <value>L'image simplifiée fournit une version simplifiée de l'image source, et peut être associée à une explication. À l'aide de l'éditeur avancé, il est possible de spécifier une ou plusieurs images simplifiées identiques dans différents formats.</value>
  </data>
  <data name="TourHelp" xml:space="preserve">
    <value>L'explication associée à un graphique tactile ou une image alternative simplifiée fournit une orientation et explique comment explorer les images de manière conceptuelle.</value>
  </data>
  <data name="EditAdvanced" xml:space="preserve">
    <value>Editer en mode avancé...</value>
  </data>
</root>