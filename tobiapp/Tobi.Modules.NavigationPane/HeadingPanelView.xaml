<DockPanel x:Class="Tobi.Plugin.NavigationPane.HeadingPanelView"
                    xmlns="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pres="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:local="clr-namespace:Tobi.Plugin.NavigationPane"
                    xmlns:search="clr-namespace:Tobi.Plugin.NavigationPane.Search" xmlns:_UnusedCode="clr-namespace:Tobi.Common._UnusedCode;assembly=Tobi.Common">


  <DockPanel LastChildFill="True"  DockPanel.Dock="Top" Margin="0,0,0,2">
    <TextBlock Text="Find:"  DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,4,0"/>
    <_UnusedCode:WatermarkTextBox  x:Name="SearchBox"
                                   TextChanged="OnSearchTextChanged"
                                   Watermark="search keywords"
                                  HorizontalAlignment="Stretch"/>
  </DockPanel>

  <!-- TextBox x:Name="SearchBox"
                         BorderThickness="0"
                         HorizontalAlignment="Stretch"
                         TextChanged="OnSearchTextChanged" 
                          DockPanel.Dock="Top"/ -->
    <pres:ScrollViewer
        VerticalScrollBarVisibility="Auto"
        HorizontalScrollBarVisibility="Visible"
        CanContentScroll="True"
        IsDeferredScrollingEnabled="False"
        Focusable="False">

        <TreeView 
        x:Name="TreeView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:UI="clr-namespace:Tobi.Common.UI;assembly=Tobi.Common"
        DataContext="{Binding Path=ViewModel.HeadingsNavigator, RelativeSource={x:Static RelativeSource.Self}}"
        ItemsSource="{Binding Roots}"
        SelectedItemChanged="OnSelectedItemChanged_TreeView"
        DockPanel.Dock="Top"
        VirtualizingStackPanel.IsVirtualizing="False"
        VirtualizingStackPanel.VirtualizationMode="Recycling"
        Focusable="True"
        IsTabStop="True"
        AutomationProperties.Name="{x:Static local:HeadingPanelView.View_Name}">

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <EventSetter Event="MouseDoubleClick" Handler="OnMouseDoubleClick_TreeItem" />
                    <EventSetter Event="KeyDown" Handler="OnKeyDown_TreeViewItem" />
                    <Setter Property="AutomationProperties.Name" Value="{Binding Title}"/>
                    <Setter Property="local:TreeViewItemBehavior.IsBroughtIntoViewWhenSelected" Value="True" />

                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="search:SearchOperations.IsMatch" Value="{Binding SearchMatch}"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="search:SearchOperations.IsMatch" Value="True">

                            <Setter Property="Background">
                                <Setter.Value>
                                  <SolidColorBrush Color="#FF99FF66"/>
                                  <!-- LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="#FF78C4FF" Offset="1"/>
                                    </LinearGradientBrush -->
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>


            <TreeView.Resources>

                <HierarchicalDataTemplate DataType="{x:Type local:HeadingTreeNodeWrapper}" ItemsSource="{Binding Children}">

                    <TextBlock Text="{Binding Path=Title}">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                          <ContextMenu.Resources>
                            <Style TargetType="{x:Type UI:MenuItemRichCommand}" BasedOn="{StaticResource {x:Type MenuItem}}">
                              <!-- Setter Property="OverridesDefaultStyle" Value="True"/ -->
                              <!-- Setter Property="FontSize" Value="30"/>
                              <Setter Property="FontWeight" Value="UltraBold"/ -->
                              <Style.Triggers>
                                <!--This trigger is needed, because RelativeSource binding can only succeeds if the current MenuItem is already connected to its visual parent-->
                                <Trigger Property="IsVisible" Value="True">
                                  <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                  <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                </Trigger>
                              </Style.Triggers>
                            </Style>
                          </ContextMenu.Resources>
                            <UI:MenuItemRichCommand RichCommand="{Binding CommandExpandAll}"/>
                            <!-- <UI:MenuItemRichCommand RichCommand="{Binding CommandExpand}" CommandParameter="{Binding Path=.}"/> -->
                            <UI:MenuItemRichCommand RichCommand="{Binding CommandCollapseAll}"/>
                            <!-- <UI:MenuItemRichCommand RichCommand="{Binding CommandCollapse}" CommandParameter="{Binding Path=.}"/> -->
                          <!-- UI:MenuItemRichCommand RichCommand="{Binding CommandEditText}" CommandParameter="{Binding Path=.}"/ -->
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                    </TextBlock>
                    <!--
                <HierarchicalDataTemplate.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Title}">
                        <TextBlock.ContextMenu>
                            <ContextMenu>
                                <UI:MenuItemRichCommand RichCommand="{Binding CommandExpandAll}"/>
                                <UI:MenuItemRichCommand RichCommand="{Binding CommandExpand}" CommandParameter="{Binding Path=.}"/>
                                <UI:MenuItemRichCommand RichCommand="{Binding CommandCollapseAll}"/>
                                <UI:MenuItemRichCommand RichCommand="{Binding CommandCollapse}" CommandParameter="{Binding Path=.}"/>
                                <UI:MenuItemRichCommand RichCommand="{Binding CommandEditText}" CommandParameter="{Binding Path=.}"/>
                            </ContextMenu>
                        </TextBlock.ContextMenu>
                        </TextBlock>
                    </DataTemplate>
                </HierarchicalDataTemplate.ItemTemplate>
                -->
                </HierarchicalDataTemplate>
                <!-- ContextMenu x:Key="TreeViewContext">
                    <UI:MenuItemRichCommand RichCommand="{Binding CommandExpandAll}"/>
                    <UI:MenuItemRichCommand RichCommand="{Binding CommandCollapseAll}"/>
                </ContextMenu -->

            </TreeView.Resources>

        </TreeView>
    </pres:ScrollViewer>
</DockPanel>