<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CmdSwitchNarratorView_ShortDesc" xml:space="preserve">
    <value>_Narrator window</value>
  </data>
  <data name="CmdSwitchNarratorView_LongDesc" xml:space="preserve">
    <value>Open / close the audio narration popup window</value>
  </data>
  <data name="CmdTextOnlyViewToggle_ShortDesc" xml:space="preserve">
    <value>_Single text phrase</value>
  </data>
  <data name="CmdTextOnlyViewToggle_LongDesc" xml:space="preserve">
    <value>Toggle the text viewer mode</value>
  </data>
  <data name="CmdStructureDown_ShortDesc" xml:space="preserve">
    <value>Narro_w selection</value>
  </data>
  <data name="CmdStructureDown_LongDesc" xml:space="preserve">
    <value>Contract the selection down one level in the document structure</value>
  </data>
  <data name="CmdStructureUp_ShortDesc" xml:space="preserve">
    <value>E_xpand selection</value>
  </data>
  <data name="CmdStructureUp_LongDesc" xml:space="preserve">
    <value>Grow the selection up one level in the document structure</value>
  </data>
  <data name="NarratorView" xml:space="preserve">
    <value>Narrator view</value>
  </data>
  <data name="TextOnly" xml:space="preserve">
    <value>Single phrase</value>
  </data>


  <data name="StructureEditValidationErrorAskDisplayDialog" xml:space="preserve">
    <value>Invalid structure edit</value>
  </data>
  <data name="ConfirmDisplayValidationDialog" xml:space="preserve">
    <value>This edit creates an invalid document, would you like to see the markup error(s)?</value>
  </data>




  <data name="ConfirmStructureClipboard" xml:space="preserve">
    <value>Do you confirm discarding the existing structure clipboard?</value>
  </data>

  <data name="InsertDocFragmentFirstInside" xml:space="preserve">
    <value>First inside</value>
  </data>
  <data name="InsertDocFragmentLastInside" xml:space="preserve">
    <value>Last inside</value>
  </data>
  <data name="InsertDocFragmentBefore" xml:space="preserve">
    <value>Before</value>
  </data>
  <data name="InsertDocFragmentAfter" xml:space="preserve">
    <value>After</value>
  </data>

  <data name="CmdStructEditRemoveFragment_ShortDesc" xml:space="preserve">
    <value>Delete fragment</value>
  </data>
  <data name="CmdStructEditRemoveFragment_LongDesc" xml:space="preserve">
    <value>Remove the selected fragment from the document</value>
  </data>

  <data name="PageLabel" xml:space="preserve">
    <value>Page label (number)</value>
  </data>
  <data name="CmdStructEditInsertPageBreak_ShortDesc" xml:space="preserve">
    <value>Insert page break ...</value>
  </data>
  <data name="CmdStructEditInsertPageBreak_LongDesc" xml:space="preserve">
    <value>Insert a numbered page break into the document</value>
  </data>
  <data name="ElementName" xml:space="preserve">
    <value>Element name</value>
  </data>
  <data name="TextContent" xml:space="preserve">
    <value>Text content</value>
  </data>
  <data name="AdvancedXmlInsert" xml:space="preserve">
    <value>Advanced XML</value>
  </data>

  <data name="CmdStructEditInsertFragment_ShortDesc" xml:space="preserve">
    <value>Insert custom XML... (advanced feature)</value>
  </data>
  <data name="CmdStructEditInsertFragment_ShortDesc" xml:space="preserve">
    <value>Insert custom XML... (advanced feature)</value>
  </data>
  <data name="CmdStructEditInsertFragment_LongDesc" xml:space="preserve">
    <value>Add basic XML markup (element name + text content)</value>
  </data>

  <data name="CmdStructEditCutFragment_ShortDesc" xml:space="preserve">
    <value>Cut fragment</value>
  </data>
  <data name="CmdStructEditCutFragment_LongDesc" xml:space="preserve">
    <value>Remove the selected document fragment, and preserve in structure clipboard</value>
  </data>

  <data name="CmdStructEditCopyFragment_ShortDesc" xml:space="preserve">
    <value>Copy fragment</value>
  </data>
  <data name="CmdStructEditCopyFragment_LongDesc" xml:space="preserve">
    <value>Make a copy of the selected document fragment into the structure clipboard</value>
  </data>

  <data name="CmdStructEditPasteFragment_ShortDesc" xml:space="preserve">
    <value>Paste fragment ...</value>
  </data>
  <data name="CmdStructEditPasteFragment_LongDesc" xml:space="preserve">
    <value>Restore the document fragment from the structure clipboard into the document</value>
  </data>
  <data name="StructEditConfirmTitle" xml:space="preserve">
    <value>Structure editing warning!</value>
  </data>
  <data name="StructEditConfirmMessage" xml:space="preserve">
    <value>Please be aware that editing the structure of the document is an expert feature, and note that only the DAISY DTBOOK markup is checked for XML errors (not EPUB3 XHTML5). When exporting your project, make sure that the document is valid.</value>
  </data>
  <data name="StructEditConfirmDetails" xml:space="preserve">
    <value>(this message will be displayed only once per project session)</value>
  </data>
  <data name="CmdEditText_ShortDesc" xml:space="preserve">
    <value>Edit _text</value>
  </data>
  <data name="CmdEditText_LongDesc" xml:space="preserve">
    <value>Modify the text of the selected document phrase</value>
  </data>
  <data name="CmdFollowLink_ShortDesc" xml:space="preserve">
    <value>_Follow link</value>
  </data>
  <data name="CmdFollowLink_LongDesc" xml:space="preserve">
    <value>Follow the hyperlink in the document</value>
  </data>
  <data name="CmdUnfollowLink_ShortDesc" xml:space="preserve">
    <value>_Go back to link</value>
  </data>
  <data name="CmdUnfollowLink_LongDesc" xml:space="preserve">
    <value>Jump back to the hyperlink that points to the current location in the document</value>
  </data>
  <data name="DocumentPanePlugin_Name" xml:space="preserve">
    <value>Document pane.</value>
  </data>
  <data name="CmdEventSwitchNext_ShortDesc" xml:space="preserve">
    <value>Select _next phrase</value>
  </data>
  <data name="CmdEventSwitchNext_LongDesc" xml:space="preserve">
    <value>Select the next text fragment in the document</value>
  </data>
  <data name="CmdEventSwitchPrevious_ShortDesc" xml:space="preserve">
    <value>Select _previous phrase</value>
  </data>
  <data name="CmdEventSwitchPrevious_LongDesc" xml:space="preserve">
    <value>Select the previous text fragment in the document</value>
  </data>
  <data name="Feature_Not_Available" xml:space="preserve">
    <value>This feature is not available.</value>
  </data>
  <data name="LOG_FILE_PATH" xml:space="preserve">
    <value>[0]</value>
  </data>
  <data name="No_Document" xml:space="preserve">
    <value>No document.</value>
  </data>
  <data name="DocumentPanePlugin_Description" xml:space="preserve">
    <value>The publication document viewer</value>
  </data>
  <data name="CreatingFlowDocument" xml:space="preserve">
    <value>Rendering the document ...</value>
  </data>
  <data name="ConvertingXukToFlowDocument" xml:space="preserve">
    <value>Converting XUK markup ...</value>
  </data>
  <data name="CmdTxtFocus_ShortDesc" xml:space="preserve">
    <value>_Document toolbar</value>
  </data>
  <data name="MathMLSelectToShow" xml:space="preserve">
    <value>Reminder: MathML will display during selection</value>
  </data>
</root>