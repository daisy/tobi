<Window x:Class="Tobi.Common.UI.PopupModalWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:UI="clr-namespace:Tobi.Common.UI"
    xmlns:Common="clr-namespace:Tobi.Common"
    Height="480" Width="640"

        WindowStartupLocation="CenterOwner"
        ResizeMode="CanResizeWithGrip"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        Loaded="OnWindowLoaded"
        Closing="OnWindowClosing"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        >
  
  <Window.Resources>
    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
  </Window.Resources>
  <!-- LastChildFill="True" -->
  
    <Grid Style="{StaticResource ScaleTransformed}">

      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <!-- Height="{Binding ElementName=ContentPlaceHolder, Path=Content, Converter={UI:ContentToGridDimConverter}, Mode=OneWay}" -->
        <RowDefinition>
          <RowDefinition.Height>
            <MultiBinding Converter="{UI:ContentToGridDimMultiConverter}" Mode="OneWay">
              <Binding ElementName="ContentPlaceHolder"
                       Path="Content" Mode="OneWay"/>
              <Binding ElementName="DetailsPlaceHolder"
                       Path="Visibility" Mode="OneWay"/>
            </MultiBinding>
          </RowDefinition.Height>
        </RowDefinition>
        <RowDefinition>
          <RowDefinition.Height>
            <MultiBinding Converter="{UI:ContentToGridDimMultiConverter}" Mode="OneWay">
              <Binding ElementName="DetailsPlaceHolder"
                       Path="Content" Mode="OneWay"/>
              <Binding Path="IsDetailsExpanded" Mode="OneWay"/>
            </MultiBinding>
          </RowDefinition.Height>
      </RowDefinition>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <ContentControl x:Name="ContentPlaceHolder"
                      Grid.Row="0"
                    Grid.Column="0"
                        
                        
    DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                  AncestorType={x:Type Window}}, Path=.}"
                        
                      SnapsToDevicePixels="True"
                    Margin="8, 8, 8, 0"
                      
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                    Focusable="False"/>

      <ContentControl x:Name="DetailsPlaceHolder"
                        
      Grid.Row="1"
                    Grid.Column="0"
                        
    DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                  AncestorType={x:Type Window}}, Path=.}"
                        
                      SnapsToDevicePixels="True"
                  Margin="8, 8, 8, 0"
                      
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                    Focusable="False"
                    Visibility="{Binding IsDetailsExpanded, Mode=OneWay, Converter={StaticResource booleanToVisibilityConverter}}"/>

      <!-- 
        DockPanel.Dock="Bottom" -->
      <DockPanel
        
        Grid.Row="2"
                      Grid.Column="0"
        
                   HorizontalAlignment="Stretch"
                VerticalAlignment="Bottom"
        
        DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                  AncestorType={x:Type Window}}, Path=.}"
        LastChildFill="True"
                 Margin="8, 0, 8, 8"
        >

        <Rectangle DockPanel.Dock="Top"
                   Margin="0, 0, 0, 8"
                   Height="1"
                   HorizontalAlignment="Stretch"
                   StrokeThickness="1"
                   Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                    Fill="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                SnapsToDevicePixels="True"
                   />

        <!-- 
          IsChecked="{Binding IsDetailsExpanded, Mode=OneWay}" -->
        <UI:TwoStateButtonRichCommand
          Style="{StaticResource ToolBarButtonBaseStyle}"
          
          ShowTextLabel="true"
          
        InputBindingManager="{Binding InputBindingManager}"
          
          RichCommandOne="{Binding CommandDetailsCollapse}"
          RichCommandTwo="{Binding CommandDetailsExpand}"
                RichCommandActive="{Binding IsDetailsExpanded, Mode=OneWay}"
          DockPanel.Dock="Left"
          Visibility="{Binding Mode=OneWay, Path=HasDetails, Converter={StaticResource booleanToVisibilityConverter}}"/>
        
        <StackPanel
                  Orientation="Horizontal"
                  HorizontalAlignment="Right">


          <StackPanel.Resources>

            <Style TargetType="{x:Type Button}">
              <Setter Property="Padding" Value="5"></Setter>
              <Setter Property="Margin" Value="0, 0, 4, 0"></Setter>
              <Setter Property="MinWidth" Value="50"></Setter>
            </Style>
            
          </StackPanel.Resources>

          <Button x:Name="ButtonOK"
                Click="OnOkButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Ok}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Ok}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Ok, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Common:UserInterfaceStrings.Ok}"/>
        
        <Button x:Name="ButtonYes"
                Click="OnYesButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Yes}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Yes}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Yes, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Common:UserInterfaceStrings.Yes}"/>
        
        <Button x:Name="ButtonNo"
                Click="OnNoButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_No}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_No}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_No, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Common:UserInterfaceStrings.No}"/>
        
        <Button x:Name="ButtonApply"
                Click="OnApplyButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Apply}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Apply}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Apply, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Common:UserInterfaceStrings.Apply}"/>

          <Button x:Name="ButtonCancel"
                  Click="OnCancelButtonClick"
                  IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Cancel}"
                  IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Cancel}"
                  Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Cancel, Converter={StaticResource booleanToVisibilityConverter}}"
                  Content="{x:Static Common:UserInterfaceStrings.Cancel}"/>

          <Button x:Name="ButtonClose"
                Click="OnCloseButtonClick"
                IsDefault="{Binding Mode=OneWay, Path=IsButtonDefault_Close}"
                IsEnabled="{Binding Mode=OneWay, Path=IsButtonActive_Close}"
                Visibility="{Binding Mode=OneWay, Path=IsButtonActive_Close, Converter={StaticResource booleanToVisibilityConverter}}"
                Content="{x:Static Common:UserInterfaceStrings.CloseDialog}"/>

        <Rectangle Width="10"/>
      
      </StackPanel>
    </DockPanel>
      <!-- LastChildFill="True" -->
    

    </Grid>
</Window>
