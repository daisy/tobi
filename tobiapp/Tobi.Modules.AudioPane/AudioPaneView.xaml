<!-- ad:DockablePane -->
<Grid
  x:Class="Tobi.Modules.AudioPane.AudioPaneView"
  xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="PresentationOptions"
  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:infraUI="clr-namespace:Tobi.Infrastructure.UI;assembly=Tobi.Infrastructure"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:infra="clr-namespace:Tobi.Infrastructure;assembly=Tobi.Infrastructure"
    xmlns:local="clr-namespace:Tobi.Modules.AudioPane"
    xmlns:Regions="clr-namespace:Microsoft.Practices.Composite.Presentation.Regions;assembly=Microsoft.Practices.Composite.Presentation"
             Loaded="OnPaneLoaded"
  Focusable="False"
  
  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
  >

  <Grid.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/media-playback-pause.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/media-playback-start.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/media-playback-stop.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/media-record.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/media-seek-backward.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/media-seek-forward.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/media-skip-backward.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/media-skip-forward.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/document-open.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/go-first.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/go-last.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/go-previous.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/go-next.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/system-search.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/list-add.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/list-remove.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/edit-clear.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/view-refresh.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/go-jump.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/Tobi.Infrastructure;component/tango-icons/utilities-system-monitor.xaml"/>
      </ResourceDictionary.MergedDictionaries>

      <infraUI:RenderTargetBitmapImageSourceConverter x:Key="RenderTargetBitmapImageSourceConverter"/>

      <System:Double x:Key="IconWidth">16</System:Double>
      <System:Double x:Key="IconHeight">16</System:Double>

      <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="2"/>
      </Style>
      
      <Style x:Key="IconToggleButton" TargetType="{x:Type ToggleButton}">
        <!--BasedOn="IconButton" -->
        <Setter Property="Padding" Value="2"/>
      </Style>

      <Style x:Key="ButtonImage" TargetType="{x:Type Image}">
        <Setter Property="Stretch" Value="Fill"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="Height" Value="{StaticResource IconHeight}"/>
        <Setter Property="Width" Value="{StaticResource IconWidth}"/>
      </Style>
    </ResourceDictionary>
  </Grid.Resources>


  <!-- Regions:RegionManager.RegionManager="{Binding Path=(Regions:RegionManager.RegionManager), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Mode=OneWay}"  -->

  <!-- ad:DockableContent Title="Audio Waveform and PeakMeter" DockableStyle="DockableToBorders" -->


  <Grid.ColumnDefinitions>
    <!-- ColumnDefinition Width="100"/>
      <ColumnDefinition Width="Auto"/ -->
    <ColumnDefinition Width="*"/>
    <ColumnDefinition Width="Auto"/>
    <ColumnDefinition Width="50"/>
  </Grid.ColumnDefinitions>
  <Grid.RowDefinitions>
    <RowDefinition Height="*"/>
    <RowDefinition Height="Auto"/>
  </Grid.RowDefinitions>

  <!-- GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5"/ -->
  <GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5"/>

  <!-- ScrollViewer Grid.Column="0" Grid.Row="0"
                  VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Auto"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch">
      <StackPanel Orientation="Vertical">
        <CheckBox IsChecked="{Binding IsUseDecibels, Mode=TwoWay}" Margin="2">Decibel logarithmic scale</CheckBox>
        <CheckBox IsChecked="{Binding IsUseDecibelsNoAverage, Mode=TwoWay}" IsEnabled="{Binding IsUseDecibels}" Margin="2">Use min/max instead of average</CheckBox>
        <CheckBox IsChecked="{Binding IsUseDecibelsAdjust, Mode=TwoWay}" IsEnabled="{Binding IsUseDecibels}" Margin="2">Auto adjust dB scale</CheckBox>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Decibel resolutions: </TextBlock>
          <ComboBox ItemsSource="{Binding DecibelResolutions, Mode=OneWay}" SelectedItem="{Binding DecibelResolution, Mode=TwoWay}"  IsEnabled="{Binding IsUseDecibels}" Margin="2"/>
        </StackPanel>
        <CheckBox IsChecked="{Binding IsBackgroundVisible, Mode=TwoWay}" Margin="2">Waveform framed</CheckBox>
        <CheckBox IsChecked="{Binding IsWaveFillVisible, Mode=TwoWay}" Margin="2">Waveform Bars</CheckBox>
        <CheckBox IsChecked="{Binding IsEnvelopeVisible, Mode=TwoWay}" Margin="2">Envelope</CheckBox>
        <CheckBox IsChecked="{Binding IsEnvelopeFilled, Mode=TwoWay}" IsEnabled="{Binding IsEnvelopeVisible}" Margin="2">Envelope Fill</CheckBox>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform increment: </TextBlock>
          <ComboBox ItemsSource="{Binding WaveStepXs, Mode=OneWay}" SelectedItem="{Binding WaveStepX, Mode=TwoWay}" Margin="2"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform background: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorWaveBackground, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>

        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform bars: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorWaveBars, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform envelope: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorEnvelopeOutline, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform envelope fill: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorEnvelopeFill, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform markers: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorMarkers, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Playhead: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorPlayhead, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Playhead triangle: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorPlayheadFill, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Time selection: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorTimeSelection, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
      </StackPanel>
    </ScrollViewer -->

  <DockPanel Grid.Column="0" Grid.Row="0"
             HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

    <WindowsFormsHost x:Name="WinFormHost"
                      DockPanel.Dock="Left"
                      Focusable="False"/>


    <!-- Grid DockPanel.Dock="Top">

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Button Click="OnOpenFile"
              Grid.Row="1" Grid.Column="0">Play WAV file...</Button>

      <TextBox Text="{Binding Path=FilePath, Mode=OneWay}"
               IsEnabled="False"
               Grid.Row="1" Grid.Column="1"/>
    </Grid -->


    <ScrollViewer x:Name="WaveFormScroll"
                  DockPanel.Dock="Bottom"
                  VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Visible"
                  Background="DarkGray"
                  VerticalAlignment="Stretch">

      <Canvas x:Name="WaveFormCanvas"
              SizeChanged="OnWaveFormCanvasSizeChanged"
               MouseDown="OnWaveFormMouseDown"
               MouseMove="OnWaveFormMouseMove"
               MouseUp="OnWaveFormMouseUp"
               MouseLeave="OnWaveFormMouseLeave"
              Width="{Binding ElementName=ZoomSlider, Path=Value, Mode=OneWay}"
              Background="Black"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Left"
              SnapsToDevicePixels="False">
        <!-- -->
        <Image x:Name="WaveFormImage"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch"
               Stretch="Fill"
               Canvas.ZIndex="0"
               Width="{Binding ElementName=ZoomSlider, Path=Value, Mode=OneWay}"
               Height="{Binding ElementName=WaveFormCanvas, Path=ActualHeight, Mode=OneWay}"
               Canvas.Left="0"
               Canvas.Top="0"
               RenderOptions.EdgeMode="Unspecified" SnapsToDevicePixels="False"
               RenderOptions.BitmapScalingMode="HighQuality"/>

        <Path x:Name="WaveFormTimeRangePath"
              Canvas.ZIndex="1"
              StrokeThickness="1"
              RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False">
          <Path.Fill>
            <SolidColorBrush Color="{Binding Path=ColorMarkers, Mode=OneWay}"/>
          </Path.Fill>
          <Path.Stroke>
            <SolidColorBrush Color="{Binding Path=ColorMarkers, Mode=OneWay}"/>
          </Path.Stroke>
        </Path>

        <Rectangle
          x:Name="WaveFormTimeSelectionRect"
          Canvas.ZIndex="2"
              StrokeThickness="0"
              Stroke="Lime"
          RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                   Canvas.Top="0"
                   Canvas.Left="0"
                   Width="0"
          Visibility="Hidden"
               Height="{Binding ElementName=WaveFormCanvas, Path=ActualHeight, Mode=OneWay}">
          <Rectangle.Fill>
            <SolidColorBrush Opacity="0.25" Color="{Binding Path=ColorTimeSelection, Mode=OneWay}"/>
          </Rectangle.Fill>
        </Rectangle>

        <Path x:Name="WaveFormPlayHeadPath"
              Canvas.ZIndex="3"
              StrokeThickness="1.2"
              RenderOptions.EdgeMode="Unspecified" SnapsToDevicePixels="True">
          <Path.Stroke>
            <SolidColorBrush Color="{Binding Path=ColorPlayhead, Mode=OneWay}"/>
          </Path.Stroke>
          <Path.Fill>
            <SolidColorBrush Color="{Binding Path=ColorPlayheadFill, Mode=OneWay}"/>
          </Path.Fill>
        </Path>
      </Canvas>
    </ScrollViewer>
  </DockPanel>



  <Grid Grid.Column="2" Grid.Row="0"
        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width=".50*"/>
      <ColumnDefinition Width=".50*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <TextBlock x:Name="PeakOverloadLabelCh1"
               Grid.Row="0" Grid.Column="0"
               Text="{Binding Path=PeakOverloadCountCh1, Mode=OneWay}"
               TextAlignment="Center"
        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
               FontWeight="Heavy"
               MouseDown="OnResetPeakOverloadCountCh1"/>
    <TextBlock x:Name="PeakOverloadLabelCh2"
               Grid.Row="0" Grid.Column="1"
               Text="{Binding Path=PeakOverloadCountCh2, Mode=OneWay}"
               TextAlignment="Center"
        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
               FontWeight="Heavy"
               MouseDown="OnResetPeakOverloadCountCh2"/>

    <Canvas x:Name="PeakMeterCanvas"
            SizeChanged="OnPeakMeterCanvasSizeChanged"
            Background="Black"
                
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch"
                
            Grid.Row="1" Grid.Column="0"
            Grid.ColumnSpan="2">

      <Rectangle
        Canvas.ZIndex="0"
            StrokeThickness="0"
            Stroke="Green"
        RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                 Canvas.Top="0"
                 Canvas.Left="0"
                 Width="{Binding ElementName=PeakMeterCanvas, Path=ActualWidth, Mode=OneWay}"
                 Height="{Binding ElementName=PeakMeterCanvas, Path=ActualHeight, Mode=OneWay}">
        <Rectangle.Fill>
          <LinearGradientBrush x:Name="PeakMeterCanvasBackgroundBrush"
            PresentationOptions:Freeze="true"
                               StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="Red" Offset="0.0" />
            <GradientStop Color="Orange" Offset="0.25" />
            <GradientStop Color="Yellow" Offset="0.40" />
            <GradientStop Color="LimeGreen" Offset="0.65" />
            <GradientStop Color="Green" Offset="1.0" />
          </LinearGradientBrush>
        </Rectangle.Fill>
      </Rectangle>

      <Rectangle
        x:Name="PeakMeterCanvasOpaqueMask"
        Visibility="Visible"
        Canvas.ZIndex="2"
            StrokeThickness="0"
            Stroke="Lime"
        RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                 Canvas.Top="0"
                 Canvas.Left="0"
                 Width="{Binding ElementName=PeakMeterCanvas, Path=ActualWidth, Mode=OneWay}"
                 Height="{Binding ElementName=PeakMeterCanvas, Path=ActualHeight, Mode=OneWay}">
        <Rectangle.Fill>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Rectangle.Fill>
      </Rectangle>

      <Path x:Name="PeakMeterPathCh1"
            Canvas.ZIndex="1"
            StrokeThickness="1"
            RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                >
        <Path.Fill>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Path.Fill>
        <Path.Stroke>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Path.Stroke>
      </Path>


      <Path x:Name="PeakMeterPathCh2"
          Canvas.ZIndex="1"
          StrokeThickness="2"
            RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                >
        <Path.Fill>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Path.Fill>
        <Path.Stroke>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Path.Stroke>
      </Path>
    </Canvas>
  </Grid>


  <DockPanel Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1"
             DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" LastChildFill="True">

    <WrapPanel DockPanel.Dock="Left" Orientation="Horizontal">

      <Button Style="{StaticResource IconButton}"
              Click="OnOpenFile"
              ToolTip="Open a local WAV file for playback test">
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource document-open}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>


      <ToggleButton
              ToolTip="Auto playback"
              Style="{StaticResource IconToggleButton}"
              IsChecked="{Binding IsAutoPlay, Mode=TwoWay}"
              >
        <!-- ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
            <Style.Triggers>
              <Trigger Property="IsChecked" Value="True">
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Trigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style -->

        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource go-jump}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </ToggleButton>

      <Button Style="{StaticResource IconButton}"
              ToolTip="Start playback"
              
              Click="OnPlay"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource media-playback-start}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Pause playback"
              Click="OnPause"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource media-playback-pause}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Stop playback"
              Click="OnStop"
>
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource media-playback-stop}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Start recording"
              Click="OnRecord"
>
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource media-record}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Switch to previous phrase"
              Click="OnSwitchPhrasePrevious"
>
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource go-first}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Rewind to begining of audio stream"
              Click="OnGotoBegining"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource go-previous}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Step back one phrase"
              Click="OnStepBack"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource media-skip-backward}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Rewind by a pre-defined time increment"
              
              Click="OnRewind"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource media-seek-backward}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Fast-forward by a pre-defined time increment"
              Click="OnFastForward"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource media-seek-forward}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>


      <Button Style="{StaticResource IconButton}"
                            ToolTip="Step forward one phrase"
              
              Click="OnStepForward">
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource media-skip-forward}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Fast-forward to end of audio stream"
              
              Click="OnGotoEnd"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource go-next}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Switch to next phrase"
              Click="OnSwitchPhraseNext"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource go-last}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Clear selection"
              Click="OnClearSelection"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource edit-clear}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Zoom on selection"
              
              Click="OnZoomSelection">
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource system-search}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>

      <Button Style="{StaticResource IconButton}"
                            ToolTip="Fit full waveform into view"
              Click="OnZoomFitFull"
              >
        <Image Style="{StaticResource ButtonImage}">
          <Image.Source>
            <MultiBinding Converter="{StaticResource RenderTargetBitmapImageSourceConverter}">
              <!-- Binding RelativeSource="{x:Static RelativeSource.Self}" Mode="OneWay"/ -->
              <Binding Source="{StaticResource utilities-system-monitor}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconWidth}" Mode="OneWay"/>
              <Binding Source="{StaticResource IconHeight}" Mode="OneWay"/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Button>


    </WrapPanel>

    <!-- TickPlacement="BottomRight" DockPanel.Dock="Bottom" -->
    <Slider x:Name="ZoomSlider"
            Thumb.DragCompleted="OnZoomSliderDragCompleted"
            Thumb.DragStarted="OnZoomSliderDragStarted"
            IsMoveToPointEnabled="True"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Value="1000"
            Minimum="800"
            Maximum="10000"
            TickFrequency="500"
            Delay="1000"
            Interval="1000"
            LargeChange="500"
            SmallChange="200"/>

  </DockPanel>
</Grid >

<!-- /ad:DockableContent -->
<!-- /ad:DockablePane -->
