<!-- ad:DockablePane -->
<Grid
  x:Class="Tobi.Modules.AudioPane.AudioPaneView"
  xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="PresentationOptions"
  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:infraUI="clr-namespace:Tobi.Infrastructure.UI;assembly=Tobi.Infrastructure"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:infra="clr-namespace:Tobi.Infrastructure;assembly=Tobi.Infrastructure"
    xmlns:local="clr-namespace:Tobi.Modules.AudioPane"
    xmlns:Regions="clr-namespace:Microsoft.Practices.Composite.Presentation.Regions;assembly=Microsoft.Practices.Composite.Presentation"
             Loaded="OnPaneLoaded"
  Focusable="False"
  
  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
  >
  <Grid.Resources>

    <!-- All the following is required to Re-Style the ScrollViewer, see 
             http://msdn2.microsoft.com/en-us/library/aa970847(VS.85).aspx
             http://msdn2.microsoft.com/en-us/library/ms742173(VS.85).aspx
             for the default Stles that the ScrollViewer has out of the box
         -->

    <SolidColorBrush x:Key="HorizontalNormalBrush" Color="blue" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="red" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="magenta" />

    <SolidColorBrush x:Key="VerticalScrollBarBorderBackground" Color="black" />
    <SolidColorBrush x:Key="NormalBrush" Color="#333333" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="black" />
    <SolidColorBrush x:Key="GlyphBrush" Color="silver" />
    <SolidColorBrush x:Key="PressedBrush" Color="black" />

    <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border
          Name="Border"
          Margin="0"
          CornerRadius="0"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="0">
              <Path
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,
				RelativeSource={RelativeSource TemplatedParent}}" />
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background"
Value="{StaticResource PressedBrush}" />
              </Trigger>
              <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground"
Value="{StaticResource DisabledForegroundBrush}"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Background="Transparent" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Setter Property="IsTabStop" Value="false"/>
      <Setter Property="Focusable" Value="false"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border
          CornerRadius="3"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="2" />
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <System:Double x:Key="scrollthickness">14</System:Double>
    
    <ControlTemplate x:Key="VerticalScrollBar"
  TargetType="{x:Type ScrollBar}">
      <Grid >
        <Grid.RowDefinitions>
          <RowDefinition MaxHeight="{StaticResource scrollthickness}"/>
          <RowDefinition Height="0.00001*"/>
          <RowDefinition MaxHeight="{StaticResource scrollthickness}"/>
        </Grid.RowDefinitions>
        <Border
      Grid.RowSpan="3"
      CornerRadius="2"
      Background="{StaticResource VerticalScrollBarBorderBackground}" />
        <RepeatButton
      Grid.Row="0"
      Style="{StaticResource ScrollBarLineButton}"
      Height="{StaticResource scrollthickness}"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
        <Track
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
          <Track.DecreaseRepeatButton>
            <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
          </Track.IncreaseRepeatButton>
        </Track>
        <RepeatButton
      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"
      Height="{StaticResource scrollthickness}"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
      </Grid>
    </ControlTemplate>
    <!-- HorizontalScrollBar Template using the previously created Templates -->
    <ControlTemplate x:Key="HorizontalScrollBar"
  TargetType="{x:Type ScrollBar}">
      <Grid >
        <Grid.ColumnDefinitions>
          <ColumnDefinition MaxWidth="{StaticResource scrollthickness}"/>
          <ColumnDefinition Width="0.00001*"/>
          <ColumnDefinition MaxWidth="{StaticResource scrollthickness}"/>
        </Grid.ColumnDefinitions>
        <Border
      Grid.ColumnSpan="3"
      CornerRadius="3"
      Background="{StaticResource VerticalScrollBarBorderBackground}" />
        <RepeatButton
      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"
      Width="{StaticResource scrollthickness}"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
        <Track
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
          <Track.DecreaseRepeatButton>
            <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
          </Track.DecreaseRepeatButton>
          <Track.Thumb>
            <Thumb
          Style="{StaticResource ScrollBarThumb}"
          Margin="0,1,0,1"
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
          </Track.Thumb>
          <Track.IncreaseRepeatButton>
            <RepeatButton
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
          </Track.IncreaseRepeatButton>
        </Track>
        <RepeatButton
      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"
      Width="{StaticResource scrollthickness}"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
      </Grid>
    </ControlTemplate>
    <!-- Style for overall  ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="OverridesDefaultStyle" Value="true"/>
      <Style.Triggers>
        <Trigger Property="Orientation" Value="Horizontal">
          <Setter Property="Width" Value="Auto"/>
          <Setter Property="Height" Value="{StaticResource scrollthickness}" />
          <Setter Property="Template"
  Value="{StaticResource HorizontalScrollBar}" />
        </Trigger>
        <Trigger Property="Orientation" Value="Vertical">
          <Setter Property="Width" Value="{StaticResource scrollthickness}"/>
          <Setter Property="Height" Value="Auto" />
          <Setter Property="Template"
  Value="{StaticResource VerticalScrollBar}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- Style for overall  ScrollViewer -->
    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
      <Setter Property="OverridesDefaultStyle" Value="True"/>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ScrollViewer}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

              <ScrollContentPresenter Grid.Column="1"/>

              <ScrollBar Name="PART_VerticalScrollBar"
            Value="{TemplateBinding VerticalOffset}"
            Maximum="{TemplateBinding ScrollableHeight}"
            ViewportSize="{TemplateBinding ViewportHeight}"
            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
              <ScrollBar Name="PART_HorizontalScrollBar"
            Orientation="Horizontal"
            Grid.Row="1"
            Grid.Column="1"
            Value="{TemplateBinding HorizontalOffset}"
            Maximum="{TemplateBinding ScrollableWidth}"
            ViewportSize="{TemplateBinding ViewportWidth}"
            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </Grid.Resources>


  <!-- Regions:RegionManager.RegionManager="{Binding Path=(Regions:RegionManager.RegionManager), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Mode=OneWay}"  -->

  <!-- ad:DockableContent Title="Audio Waveform and PeakMeter" DockableStyle="DockableToBorders" -->


  <Grid.ColumnDefinitions>
    <!-- ColumnDefinition Width="100"/>
      <ColumnDefinition Width="Auto"/ -->
    <ColumnDefinition Width="*"/>
    <ColumnDefinition Width="Auto"/>
    <ColumnDefinition Width="50"/>
  </Grid.ColumnDefinitions>
  <Grid.RowDefinitions>
    <RowDefinition Height="*"/>
    <RowDefinition Height="Auto"/>
  </Grid.RowDefinitions>

  <!-- GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="5"/ -->
  <GridSplitter Grid.Column="1" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="{StaticResource grid-splitter-thickness}"/>

  <!-- ScrollViewer Grid.Column="0" Grid.Row="0"
                  VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Auto"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch">
      <StackPanel Orientation="Vertical">
        <CheckBox IsChecked="{Binding IsUseDecibels, Mode=TwoWay}" Margin="2">Decibel logarithmic scale</CheckBox>
        <CheckBox IsChecked="{Binding IsUseDecibelsNoAverage, Mode=TwoWay}" IsEnabled="{Binding IsUseDecibels}" Margin="2">Use min/max instead of average</CheckBox>
        <CheckBox IsChecked="{Binding IsUseDecibelsAdjust, Mode=TwoWay}" IsEnabled="{Binding IsUseDecibels}" Margin="2">Auto adjust dB scale</CheckBox>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Decibel resolutions: </TextBlock>
          <ComboBox ItemsSource="{Binding DecibelResolutions, Mode=OneWay}" SelectedItem="{Binding DecibelResolution, Mode=TwoWay}"  IsEnabled="{Binding IsUseDecibels}" Margin="2"/>
        </StackPanel>
        <CheckBox IsChecked="{Binding IsBackgroundVisible, Mode=TwoWay}" Margin="2">Waveform framed</CheckBox>
        <CheckBox IsChecked="{Binding IsWaveFillVisible, Mode=TwoWay}" Margin="2">Waveform Bars</CheckBox>
        <CheckBox IsChecked="{Binding IsEnvelopeVisible, Mode=TwoWay}" Margin="2">Envelope</CheckBox>
        <CheckBox IsChecked="{Binding IsEnvelopeFilled, Mode=TwoWay}" IsEnabled="{Binding IsEnvelopeVisible}" Margin="2">Envelope Fill</CheckBox>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform increment: </TextBlock>
          <ComboBox ItemsSource="{Binding WaveStepXs, Mode=OneWay}" SelectedItem="{Binding WaveStepX, Mode=TwoWay}" Margin="2"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform background: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorWaveBackground, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>

        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform bars: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorWaveBars, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform envelope: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorEnvelopeOutline, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform envelope fill: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorEnvelopeFill, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Waveform markers: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorMarkers, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Playhead: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorPlayhead, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Playhead triangle: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorPlayheadFill, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal">
          <TextBlock>Time selection: </TextBlock>
          <infraUI:ComboColorPicker
                                    SelectedColor="{Binding ColorTimeSelection, Mode=TwoWay}"
                                    Margin="2"
                                    HorizontalAlignment="Left"/>
        </StackPanel>
      </StackPanel>
    </ScrollViewer -->

  <DockPanel Grid.Column="0" Grid.Row="0"
             HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

    <WindowsFormsHost x:Name="WinFormHost"
                      DockPanel.Dock="Left"
                      Focusable="False"/>


    <!-- Grid DockPanel.Dock="Top">

      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Button Click="OnOpenFile"
              Grid.Row="1" Grid.Column="0">Play WAV file...</Button>

      <TextBox Text="{Binding Path=FilePath, Mode=OneWay}"
               IsEnabled="False"
               Grid.Row="1" Grid.Column="1"/>
    </Grid -->


    <ScrollViewer x:Name="WaveFormScroll"
                  RenderTransformOrigin="0.5,0.5" Style="{StaticResource FavsScrollViewer}"
                  DockPanel.Dock="Bottom"
                  VerticalScrollBarVisibility="Auto"
                  HorizontalScrollBarVisibility="Visible"
                  Background="DarkGray"
                  VerticalAlignment="Stretch"
                  ScrollChanged="OnWaveFormScrollChanged">

      <Canvas x:Name="WaveFormCanvas"
              SizeChanged="OnWaveFormCanvasSizeChanged"
               MouseDown="OnWaveFormMouseDown"
               MouseMove="OnWaveFormMouseMove"
               MouseUp="OnWaveFormMouseUp"
               MouseLeave="OnWaveFormMouseLeave"
               MouseEnter="OnWaveFormMouseEnter"
              Width="{Binding ElementName=ZoomSlider, Path=Value, Mode=OneWay}"
              Background="Black"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Left"
              SnapsToDevicePixels="False">

        
        <Image x:Name="WaveFormImage"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch"
               Stretch="Fill"
               Canvas.ZIndex="0"
               Width="{Binding ElementName=ZoomSlider, Path=Value, Mode=OneWay}"
               Height="{Binding ElementName=WaveFormCanvas, Path=ActualHeight, Mode=OneWay}"
               Canvas.Left="0"
               Canvas.Top="0"
               RenderOptions.EdgeMode="Unspecified" SnapsToDevicePixels="False"
               RenderOptions.BitmapScalingMode="HighQuality"/>

        <Path x:Name="WaveFormTimeRangePath"
              Canvas.ZIndex="1"
              StrokeThickness="1"
              RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False">
          <Path.Fill>
            <SolidColorBrush Color="{Binding Path=ColorMarkers, Mode=OneWay}"/>
          </Path.Fill>
          <Path.Stroke>
            <SolidColorBrush Color="{Binding Path=ColorMarkers, Mode=OneWay}"/>
          </Path.Stroke>
        </Path>

        <Rectangle
          x:Name="WaveFormTimeSelectionRect"
          Canvas.ZIndex="2"
              StrokeThickness="0"
              Stroke="Lime"
          RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                   Canvas.Top="0"
                   Canvas.Left="0"
                   Width="0"
          Visibility="Hidden"
               Height="{Binding ElementName=WaveFormCanvas, Path=ActualHeight, Mode=OneWay}">
          <Rectangle.Fill>
            <SolidColorBrush Opacity="0.25" Color="{Binding Path=ColorTimeSelection, Mode=OneWay}"/>
          </Rectangle.Fill>
        </Rectangle>

        <Path x:Name="WaveFormPlayHeadPath"
              Canvas.ZIndex="3"
              StrokeThickness="1.2"
              RenderOptions.EdgeMode="Unspecified" SnapsToDevicePixels="True">
          <Path.Stroke>
            <SolidColorBrush Color="{Binding Path=ColorPlayhead, Mode=OneWay}"/>
          </Path.Stroke>
          <Path.Fill>
            <SolidColorBrush Color="{Binding Path=ColorPlayheadFill, Mode=OneWay}"/>
          </Path.Fill>
        </Path>
      </Canvas>
    </ScrollViewer>
  </DockPanel>



  <Grid Grid.Column="2" Grid.Row="0"
        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width=".50*"/>
      <ColumnDefinition Width=".50*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <TextBlock x:Name="PeakOverloadLabelCh1"
               Grid.Row="0" Grid.Column="0"
               Text="{Binding Path=PeakOverloadCountCh1, Mode=OneWay}"
               TextAlignment="Center"
        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
               FontWeight="Heavy"
               MouseDown="OnResetPeakOverloadCountCh1"/>
    <TextBlock x:Name="PeakOverloadLabelCh2"
               Grid.Row="0" Grid.Column="1"
               Text="{Binding Path=PeakOverloadCountCh2, Mode=OneWay}"
               TextAlignment="Center"
        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
               FontWeight="Heavy"
               MouseDown="OnResetPeakOverloadCountCh2"/>

    <Canvas x:Name="PeakMeterCanvas"
            SizeChanged="OnPeakMeterCanvasSizeChanged"
            Background="Black"
                
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch"
                
            Grid.Row="1" Grid.Column="0"
            Grid.ColumnSpan="2">

      <Rectangle
        Canvas.ZIndex="0"
            StrokeThickness="0"
            Stroke="Green"
        RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                 Canvas.Top="0"
                 Canvas.Left="0"
                 Width="{Binding ElementName=PeakMeterCanvas, Path=ActualWidth, Mode=OneWay}"
                 Height="{Binding ElementName=PeakMeterCanvas, Path=ActualHeight, Mode=OneWay}">
        <Rectangle.Fill>
          <LinearGradientBrush x:Name="PeakMeterCanvasBackgroundBrush"
            PresentationOptions:Freeze="true"
                               StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="Red" Offset="0.0" />
            <GradientStop Color="Orange" Offset="0.25" />
            <!-- GradientStop Color="Yellow" Offset="0.40" / -->
            <GradientStop Color="LimeGreen" Offset="0.65" />
            <GradientStop Color="Green" Offset="1.0" />
          </LinearGradientBrush>
        </Rectangle.Fill>
      </Rectangle>

      <Rectangle
        x:Name="PeakMeterCanvasOpaqueMask"
        Visibility="Visible"
        Canvas.ZIndex="2"
            StrokeThickness="0"
            Stroke="Lime"
        RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                 Canvas.Top="0"
                 Canvas.Left="0"
                 Width="{Binding ElementName=PeakMeterCanvas, Path=ActualWidth, Mode=OneWay}"
                 Height="{Binding ElementName=PeakMeterCanvas, Path=ActualHeight, Mode=OneWay}">
        <Rectangle.Fill>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Rectangle.Fill>
      </Rectangle>

      <Path x:Name="PeakMeterPathCh1"
            Canvas.ZIndex="1"
            StrokeThickness="1"
            RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                >
        <Path.Fill>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Path.Fill>
        <Path.Stroke>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Path.Stroke>
      </Path>


      <Path x:Name="PeakMeterPathCh2"
          Canvas.ZIndex="1"
          StrokeThickness="2"
            RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="False"
                >
        <Path.Fill>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Path.Fill>
        <Path.Stroke>
          <SolidColorBrush Color="Black" PresentationOptions:Freeze="true"/>
        </Path.Stroke>
      </Path>
    </Canvas>
  </Grid>


  <DockPanel Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1"
             DockPanel.Dock="Bottom" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" LastChildFill="True">

    <WrapPanel DockPanel.Dock="Left" Orientation="Horizontal">

      <infraUI:ButtonRichCommand RichCommand="{Binding CommandOpenFile}"/>

      <Separator/>
      
      <infraUI:ToggleButtonRichCommand RichCommand="{Binding CommandAutoPlay}"
              IsChecked="{Binding IsAutoPlay, Mode=TwoWay}"/>


      <infraUI:TwoStateButtonRichCommand
        RichCommandOne="{Binding CommandPause}"
        RichCommandTwo="{Binding CommandPlay}"
              RichCommandActive="{Binding IsPlaying, Mode=OneWay}"/>

      <infraUI:TwoStateButtonRichCommand
        RichCommandOne="{Binding CommandStopRecord}"
        RichCommandTwo="{Binding CommandStartRecord}"
              RichCommandActive="{Binding IsRecording, Mode=OneWay}"/>

      <Separator/>
      <infraUI:ButtonRichCommand RichCommand="{Binding CommandSwitchPhrasePrevious}"
                                 />

      <infraUI:ButtonRichCommand RichCommand="{Binding CommandGotoBegining}"
                                 />

      <infraUI:ButtonRichCommand  RichCommand="{Binding CommandStepBack}"
                                  />

      <infraUI:RepeatButtonRichCommand RichCommand="{Binding CommandRewind}"
                                 />

      <infraUI:RepeatButtonRichCommand RichCommand="{Binding CommandFastForward}"
                                 />

      <infraUI:ButtonRichCommand  RichCommand="{Binding CommandStepForward}"
                                  />

      <infraUI:ButtonRichCommand RichCommand="{Binding CommandGotoEnd}"
                                 />

      <infraUI:ButtonRichCommand RichCommand="{Binding CommandSwitchPhraseNext}"
                                 />

      <Separator/>
      
      <infraUI:ButtonRichCommand RichCommand="{Binding CommandSelectAll}"
                                 />

      <infraUI:ButtonRichCommand RichCommand="{Binding CommandClearSelection}"
                                 />


      <Separator/>
      <infraUI:ButtonRichCommand RichCommand="{Binding CommandRefresh}"
                                 />
      <Separator/>

      <infraUI:ButtonRichCommand RichCommand="{Binding CommandZoomFitFull}"
                                 />
      <infraUI:ButtonRichCommand RichCommand="{Binding CommandZoomSelection}"
                                 />

    </WrapPanel>

    <!-- TickPlacement="BottomRight" DockPanel.Dock="Bottom" -->
    <Slider x:Name="ZoomSlider"
            Thumb.DragCompleted="OnZoomSliderDragCompleted"
            Thumb.DragStarted="OnZoomSliderDragStarted"
            IsMoveToPointEnabled="True"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Value="1000"
            Minimum="800"
            Maximum="10000"
            TickFrequency="500"
            Delay="1000"
            Interval="1000"
            LargeChange="500"
            SmallChange="200"/>

  </DockPanel>
</Grid >

<!-- /ad:DockableContent -->
<!-- /ad:DockablePane -->
