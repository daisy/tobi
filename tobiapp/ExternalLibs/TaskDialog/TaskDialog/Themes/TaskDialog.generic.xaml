<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:l="clr-namespace:Sid.Windows.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Sid.TaskDialog;component/themes/ButtonStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--DateTemplate Selectors-->
    <l:HeaderDataTemplateSelector x:Key="_headerTemplateSelector"/>
    <l:ContentDataTemplateSelector x:Key="_contentTemplateSelector"/>
    <l:DetailDataTemplateSelector x:Key="_detailTemplateSelector"/>
    <l:FooterDataTemplateSelector x:Key="_footerTemplateSelector"/>


    <!-- default DataTemplates for simple text strings-->
    <!-- Header-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type l:TaskDialog}, ResourceId=headerDataTemplate}">
        <TextBlock Text="{TemplateBinding Content}" 
            Foreground="{Binding HeaderForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:TaskDialog}}}"
            TextWrapping="WrapWithOverflow" TextTrimming="None"
			FontWeight="Bold" FontSize="13"
            />
    </DataTemplate>
    <!-- Content-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type l:TaskDialog}, ResourceId=contentDataTemplate}">
        <ScrollViewer
			CanContentScroll="True"
			Grid.ColumnSpan="2" Grid.Row="1"
			MaxHeight="200"
			VerticalScrollBarVisibility="Auto"
			Padding="0,0,1,0"
			>
            <!-- using a read-only textbox to enable selection of the text-->
            <TextBox Padding="0" IsReadOnly="True"
                BorderBrush="{x:Null}" BorderThickness="0" Background="Transparent"
				VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
				Text="{TemplateBinding Content}"
				VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden"
				TextWrapping="WrapWithOverflow"/>
        </ScrollViewer>
    </DataTemplate>
    <!-- Detail-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type l:TaskDialog}, ResourceId=detailDataTemplate}">

        <!-- DEtail Border -->
        <Border x:Name="detailBorder" SnapsToDevicePixels="True" Padding="2.5" Margin="2.5"
                                    BorderBrush="LightGray" BorderThickness="0,1,0,0"
                        >
            <ScrollViewer
			CanContentScroll="True"
			Grid.ColumnSpan="2" Grid.Row="1"
			MaxHeight="200"
			VerticalScrollBarVisibility="Auto"
			Padding="0,0,1,0"
			>
            <!-- using a read-only textbox to enable selection of the text-->
            <TextBox Padding="0" IsReadOnly="True" BorderBrush="{x:Null}" BorderThickness="0" Background="Transparent"
				VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
				Text="{TemplateBinding Content}"
				VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden"
				TextWrapping="WrapWithOverflow"
				/>
        </ScrollViewer>
    </Border>
    </DataTemplate>
    <!-- footer-->
    <DataTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type l:TaskDialog}, ResourceId=footerDataTemplate}">
        <TextBlock Text="{TemplateBinding Content}" 
            TextWrapping="WrapWithOverflow" TextTrimming="None"
            />
    </DataTemplate>


    <!-- TaskDialog Control template-->
    <Style TargetType="{x:Type l:TaskDialog}">
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Background" Value="White"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinWidth" Value="300" />
        <Setter Property="MaxWidth" Value="500" />
        <Setter Property="Padding" Value="10,10,10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type l:TaskDialog}">
                    <Grid Background="{TemplateBinding Background}" MinWidth="{TemplateBinding MinWidth}" MaxWidth="{TemplateBinding MaxWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <StackPanel>
                            <!-- header -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <!-- header background -->
                                <Rectangle Grid.ColumnSpan="2" Fill="{TemplateBinding HeaderBackground}"/>

                                <!-- Icon -->
                                <Image x:Name="headerIcon" Source="{TemplateBinding HeaderIconImage}" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="5,5,0,5"/>

                                <!-- Header -->
                                <ContentPresenter
                                    x:Name="headerPresenter"
									Grid.Column="1"
									VerticalAlignment="Top"
									HorizontalAlignment="Left"
									Margin="10,10,10,10"
									Content="{TemplateBinding Header}"
                                    ContentTemplate="{TemplateBinding HeaderTemplate}"
									ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
									/>
                            </Grid>

                            <!-- Content  -->
                            <ContentPresenter
                                x:Name="contentPresenter"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								/>

                                <!-- Detail -->
                            <ContentPresenter
                                x:Name="detailPresenter"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								Content="{TemplateBinding Detail}"
                                ContentTemplate="{TemplateBinding DetailTemplate}"
								ContentTemplateSelector="{TemplateBinding DetailTemplateSelector}"
								/>

                            <Rectangle x:Name="rectanglePadding" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  />

                        </StackPanel>

                        <!-- Button Border -->
                        <Border x:Name="buttonBorder" Grid.Row="1" SnapsToDevicePixels="True" Padding="5" Background="#FFF0F0F0" MinHeight="34"  BorderBrush="LightGray" BorderThickness="0,1,0,0"
                        >
                            <DockPanel LastChildFill="False">
                            <!--KeyboardNavigation.ControlTabNavigation="Cycle"
                        FocusManager.IsFocusScope="true"
                        
                            Style="{StaticResource _aeroButtonStyle}" 
                            -->
                                <Button 
                                        x:Name="PART_Button3" Command="l:TaskDialogCommands.Button3" Content="{TemplateBinding Button3Text}" DockPanel.Dock="Right" Margin="5,0,0,0" MinWidth="70" Visibility="{TemplateBinding Button3Visibility}" IsDefault="{TemplateBinding IsButton3Default}" IsCancel="{TemplateBinding IsButton3Cancel}" TabIndex="3" />
                                <Button 
                                        x:Name="PART_Button2" Command="l:TaskDialogCommands.Button2" Content="{TemplateBinding Button2Text}" DockPanel.Dock="Right" Margin="5,0,0,0" MinWidth="70" Visibility="{TemplateBinding Button2Visibility}" IsDefault="{TemplateBinding IsButton2Default}" IsCancel="{TemplateBinding IsButton2Cancel}" TabIndex="2"/>
                                <Button 
                                        x:Name="PART_Button1" Command="l:TaskDialogCommands.Button1" Content="{TemplateBinding Button1Text}" DockPanel.Dock="Right" Margin="5,0,0,0" MinWidth="70" Visibility="{TemplateBinding Button1Visibility}" IsDefault="{TemplateBinding IsButton1Default}" IsCancel="{TemplateBinding IsButton1Cancel}" TabIndex="1"/>

                                <ToggleButton x:Name="toggleButton" 
                                        Style="{StaticResource _toggleButtonStyle}"
                                        Content="{TemplateBinding ToggleButtonText}"
                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        DockPanel.Dock="Left" TabIndex="0"/>
                            </DockPanel>
                        </Border>

                        <!-- Footer Border-->
                        <Border x:Name="footerBorder" Grid.Row="2" SnapsToDevicePixels="True" Background="#FFF0F0F0" MinHeight="30" BorderBrush="LightGray" BorderThickness="0,1,0,0">
                            <Border Grid.Row="2" BorderBrush="White" BorderThickness="0,1,0,0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <!-- Footer Icon -->
                                    <Image RenderTransformOrigin="0.5,0.5"  Source="{TemplateBinding FooterIconImage}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0,0,0">
                                        <Image.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="0.5" ScaleY="0.5"/>
                                            </TransformGroup>
                                        </Image.RenderTransform>
                                    </Image>

                                    <!-- Footer  -->
                                    <ContentPresenter
									    Grid.Column="1"
									    VerticalAlignment="Center"
									    HorizontalAlignment="Left"
									    Margin="5,4,10,4"
                                        Content="{TemplateBinding Footer}"
                                        ContentTemplate="{TemplateBinding FooterTemplate}"
                                        ContentTemplateSelector="{TemplateBinding FooterTemplateSelector}"
									    />
                                </Grid>
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasHeader" Value="false">
                            <Setter Property="Visibility" TargetName="headerPresenter" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasHeaderIcon" Value="false">
                            <Setter Property="Visibility" TargetName="headerIcon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="false">
                            <Setter Property="Visibility" TargetName="contentPresenter" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasDetail" Value="false">
                            <Setter Property="Visibility" TargetName="toggleButton" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" TargetName="detailPresenter" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasFooter" Value="false">
                            <Setter Property="Visibility" TargetName="footerBorder" Value="Collapsed"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasDetail" Value="false"/>
                                <Condition Property="TaskDialogButton" Value="None"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="buttonBorder" Value="Collapsed"/>
                        </MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasHeaderIcon" Value="false"/>
								<Condition Property="HasHeader" Value="false"/>
								<Condition Property="HasContent" Value="false"/>
								<Condition Property="HasDetail" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Visibility" TargetName="rectanglePadding" Value="Collapsed"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>